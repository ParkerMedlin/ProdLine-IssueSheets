Sub createWorkbooks()
'///Linked to the 1's and 0's icon on issueSheet_TABLE sheet////////////////////////////////////////////////////////////////////////////
'///Loops through the list and triggers IssueSheetGen at each row///////////////////////////////////////////////////////////////////////

    'msgbox to make sure u committed bb <3
    Dim uInput2 As Integer
    uInput2 = MsgBox("Proceed with all Issue Sheet Functions?", vbQuestion + vbYesNo)
    
    If uInput2 = vbYes Then
    
        Call macrosOff
        
        'Ask for today's date and then put it into NOT the Blending Issue Sheet
        Dim issueDate As Date
        issueDate = InputBox("Enter the date as MM/DD/YYYY")
        Application.ScreenUpdating = True
        Workbooks("NOT_Blending_Issue_Sheet.xlsb").Activate
        Application.ScreenUpdating = False
        Sheets(1).Activate
        Range("D4").Value = issueDate

        'Remove duplicates from the list
        Windows("ISSUESHEET_GEN.xlsb").Activate
        Range("issueSheet_TABLE[uniqchek]").Select
        ActiveSheet.Range("issueSheet_TABLE[#All]").RemoveDuplicates Columns:=15, _
            Header:=xlYes
    
        'Declare variables
        Dim numberOfRows As Integer
        Dim i As Integer
   
        'Set the number of total iterations to the number of rows in the issue sheet table
        ActiveSheet.ListObjects("issueSheet_TABLE").DataBodyRange.SpecialCells(xlCellTypeVisible).Select
        numberOfRows = Selection.Rows.Count

        Range("H2").Select
    
        'The For loop
        For i = 1 To numberOfRows
        Call IssueSheetGen
        Windows("ISSUESHEET_GEN.xlsb").Activate
        Selection.Offset(1, 0).Select
        Next i
    
        'Print and save issue sheets
        Call saveNewIssueSheets
    
        'Close the template
        Workbooks("NOT_Blending_Issue_Sheet.xlsb").Close SaveChanges:=False
    
        'Refresh and restore order
        Call refreshIssueSheet

        'turn the macros on
        Call macrosOn
        Range("I2:I40").Select
        Selection.ClearContents
    
        'Print the issue schedule
        Dim uInput3 As Integer
        uInput3 = MsgBox("Print Issue Schedules?", vbQuestion + vbYesNo)
        If uInput3 = vbYes Then
            Call printIssueSchedule
        Else
        MsgBox "Print cancelled."
        End If
   
    Else
    
        MsgBox "Looper cancelled."
        
    
    
    End If

End Sub

Sub IssueSheetGen()
'///tink beep tink tink////////////////////////////////////////////////////////////////

    'Set the way back to the current workbook
    Dim sheetInfo(15) As Variant

    'Open the blend issue sheet
    Application.ScreenUpdating = True
    Workbooks("NOT_Blending_Issue_Sheet.xlsb").Activate
    Application.ScreenUpdating = False
    Sheets(1).Activate
    
    'Set up all them array values
    Windows("ISSUESHEET_GEN.xlsb").Activate
    sheetInfo(0) = ActiveCell.Offset(0, -6).Value   'Blend PN
    sheetInfo(1) = ActiveCell.Offset(0, -5).Value   'Blend Description
    sheetInfo(2) = ActiveCell.Offset(0, -2).Value   'Line name
    sheetInfo(3) = ActiveCell.Offset(0, 8).Value    'Lot Num 1
    sheetInfo(4) = ActiveCell.Offset(0, 9).Value    'Lot Num 1 Qty
    sheetInfo(5) = ActiveCell.Offset(0, 10).Value   'Lot Num 2
    sheetInfo(6) = ActiveCell.Offset(0, 11).Value   'Lot Num 2 Qty
    sheetInfo(7) = ActiveCell.Offset(0, 12).Value   'Lot Num 3
    sheetInfo(8) = ActiveCell.Offset(0, 13).Value   'Lot Num 3 Qty
    sheetInfo(9) = ActiveCell.Offset(0, 14).Value   'Lot Num 4
    sheetInfo(10) = ActiveCell.Offset(0, 15).Value  'Lot Num 4 Qty
    sheetInfo(11) = ActiveCell.Offset(0, 16).Value  'Lot Num 5
    sheetInfo(12) = ActiveCell.Offset(0, 17).Value  'Lot Num 5 Qty
    sheetInfo(13) = ActiveCell.Offset(0, 18).Value  'Lot Num 6
    sheetInfo(14) = ActiveCell.Offset(0, 19).Value  'Lot Num 6 Qty
    
    'Put all that stuff in the issue sheet
    Windows("NOT_Blending_Issue_Sheet.xlsb").Activate

    Range("B8").Value = sheetInfo(0)
    Range("D8").Value = sheetInfo(1)
    Range("D6").Value = sheetInfo(2)
    Range("B10").Value = sheetInfo(3)
    Range("B12").Value = sheetInfo(4)
    Range("D10").Value = sheetInfo(5)
    Range("D12").Value = sheetInfo(6)
    Range("F10").Value = sheetInfo(7)
    Range("F12").Value = sheetInfo(8)
    Range("B25").Value = sheetInfo(9)
    Range("B27").Value = sheetInfo(10)
    Range("D25").Value = sheetInfo(11)
    Range("D27").Value = sheetInfo(12)
    Range("F25").Value = sheetInfo(13)
    Range("F27").Value = sheetInfo(14)

    Dim SheetCount As Integer
    
    'Select the appropriate workbook and copy the issue sheet to it
    Select Case Range("D6").Value
      
    Case "Inline"
        Workbooks.Open ("C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Issue Sheet\PrintToSheet\01 Inline Issue Sheets.xlsb")
        SheetCount = Application.Sheets.Count
        Windows("NOT_Blending_Issue_Sheet.xlsb").Activate
        Sheets(1).Select
        Sheets(1).Copy Before:=Workbooks( _
        "01 Inline Issue Sheets.xlsb").Sheets(SheetCount)
        Windows("01 Inline Issue Sheets.xlsb").Activate
        ActiveSheet.Name = sheetInfo(0)

    Case "PDLine"
        Workbooks.Open ("C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Issue Sheet\PrintToSheet\02 PDline Issue Sheets.xlsb")
        SheetCount = Application.Sheets.Count
        Windows("NOT_Blending_Issue_Sheet.xlsb").Activate
        Sheets(1).Select
        Sheets(1).Copy Before:=Workbooks( _
        "02 PDline Issue Sheets.xlsb").Sheets(SheetCount)
        Windows("02 PDline Issue Sheets.xlsb").Activate
        ActiveSheet.Name = sheetInfo(0)

    Case "JBLine"
        Workbooks.Open ("C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Issue Sheet\PrintToSheet\03 JBline Issue Sheets.xlsb")
        SheetCount = Application.Sheets.Count
        Windows("NOT_Blending_Issue_Sheet.xlsb").Activate
        Sheets(1).Select
        Sheets(1).Copy Before:=Workbooks( _
        "03 JBline Issue Sheets.xlsb").Sheets(SheetCount)
        Windows("03 JBline Issue Sheets.xlsb").Activate
        ActiveSheet.Name = sheetInfo(0)
    
    End Select

    Workbooks("ISSUESHEET_GEN.xlsb").Activate

End Sub


Sub saveNewIssueSheets()
'///Save a copy of each issue sheet and rename them appropriately///////////////////////////////////////////////////////////////////////

    'declare variables for each filename
    Dim INpath As String
    Dim PDpath As String
    Dim JBpath As String
    Dim foldrpath As String
    Dim dateStr As String
    
    Workbooks("NOT_Blending_Issue_Sheet.xlsb").Activate
    dateStr = Sheets(1).Range("D4").Value
    dateStr = Replace(dateStr, "/", "-")
        
    'Create folder in OneDrive\Blending\DatedIssueSheets
    foldrpath = "C:\OD\Kinpak, Inc\Blending - Documents\01 Spreadsheet Tools\Blending Issue Sheet\IssueSheetArchive\"
    foldrpath = foldrpath & dateStr & " Issue Sheets"
    MsgBox foldrpath
    MkDir foldrpath
    
    'Open and save copy of each set of sheets to a new workbook, then clear the template:
    INpath = foldrpath & "\" & dateStr & " Inline Issue Sheets.xlsb"
    Windows("01 Inline Issue Sheets.xlsb").Activate
    ActiveWorkbook.SaveCopyAs INpath
    Dim uInput As Integer
    uInput = MsgBox("Print Issue Sheets?", vbQuestion + vbYesNo)
        If uInput = vbYes Then
            Call printIssueSheets
            Call printIssueSheets
        Else
        MsgBox "Print cancelled."
        End If
    Workbooks("01 Inline Issue Sheets.xlsb").Close SaveChanges:=False
    
    PDpath = foldrpath & "\" & dateStr & " PDline Issue Sheets.xlsb"
    Windows("02 PDline Issue Sheets.xlsb").Activate
    ActiveWorkbook.SaveCopyAs PDpath
    uInput = MsgBox("Print Issue Sheets?", vbQuestion + vbYesNo)
        If uInput = vbYes Then
            Call printIssueSheets
            Call printIssueSheets
        Else
        MsgBox "Print cancelled."
        End If
    Workbooks("02 PDline Issue Sheets.xlsb").Close SaveChanges:=False

    JBpath = foldrpath & "\" & dateStr & " JBline Issue Sheets.xlsb"
    Windows("03 JBline Issue Sheets.xlsb").Activate
    ActiveWorkbook.SaveCopyAs JBpath
    uInput = MsgBox("Print Issue Sheets?", vbQuestion + vbYesNo)
        If uInput = vbYes Then
            Call printIssueSheets
            Call printIssueSheets
        Else
        MsgBox "Print cancelled."
        End If
    Workbooks("03 JBline Issue Sheets.xlsb").Close SaveChanges:=False
    
    
End Sub





