Public Declare PtrSafe Function GetTickCount Lib "kernel32.dll" () As Long

Sub Delay(Finish As Long)
    Dim NowTick As Long
    Dim EndTick As Long
    
    EndTick = GetTickCount + (Finish * 1000)
    
    Do
        NowTick = GetTickCount
        DoEvents
    
    Loop Until NowTick >= EndTick
End Sub


Sub printWithStaples()
    
    Delay (5)
    'Open print menu then select printer from dropdown
    Application.SendKeys "%fp", True
    Delay (1)
    Application.SendKeys "i", True
    Delay (1)
    Application.SendKeys "{DOWN 12}~", True
    Delay (1)
    Application.SendKeys "{ESC}", True
    
    'run through sheets and change settings
    Dim incr As Integer
    For incr = 1 To 3
        Sheets(incr).Activate
            Delay (2)
            'Open print menu
            Application.SendKeys "%fp", True
            Delay (2)
            
            'Print one-sided
            Application.SendKeys "%d", True
            Delay (2)
            Application.SendKeys "{UP}~", True
            Delay (2)
            
            'Staples in top left corner
            Application.SendKeys "%fpk", True
            Application.SendKeys "{DOWN}~", True
            Delay (2)
            
            Application.SendKeys "%pp", True
            Application.SendKeys "{ESC}", True
            Delay (2)
            
    Next incr
    'MsgBox "hold up wait"
    
    'run through sheets again and print each one
    incr = 1
    For incr = 1 To 3
        Sheets(incr).Activate
        Application.SendKeys "%fpp", True
            'MsgBox "yo"
        'Application.SendKeys "{ESC}", True
        Delay (3)

    Next incr
    
    'Change printer selection back to the default printer
    Application.SendKeys "%fp", True
    Delay (2)
    Application.SendKeys "i", True
    Delay (2)
    Application.SendKeys "{UP 12}~", True
    Delay (2)
    Application.SendKeys "{ESC}", True
    Delay (1)
    
    ActiveWorkbook.Close SaveChanges:=True
    
End Sub



Sub printIssueSchedule()
'///Assigned to printer on IssueSheetTable/////////////////////////////////////////////////////////////////////////////////
'///Formats the sheet and then prints it///////////////////////////////////////////////////////////////////////////////////
    
'declare int
    Dim i As Integer
    Dim numRows As Integer
    
'find numRows
    NextFree = Range("D2:D" & Rows.Count).Cells.SpecialCells(xlCellTypeBlanks).Row
    Range("D" & NextFree).Select
    numRows = Selection.Row + 1

'insert row
    Rows("1:1").Select
    Selection.Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
    Dim theDate As Date
    theDate = InputBox("Enter the date as MM/DD/YYYY")
    Range("B1").Select
    ActiveCell.FormulaR1C1 = "Runs for " & theDate
    With Selection.Font
        .Name = "Calibri"
        .Size = 22
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontMinor
    End With

'hide columns and select appropriate thing
    Range("H:AB").Select
    Selection.EntireColumn.Hidden = True
    Range("A1:G" & numRows).Select

    Dim numberOfCopies As Integer
    numberOfCopies = Application.InputBox(Prompt:="How many copies?", Type:=1)

'Print it however many times
    For i = 1 To numberOfCopies
    Selection.PrintOut
    Next i

'delete row
    Rows("1:1").Select
    Selection.Delete Shift:=xlUp

'Unhide things
    Range("H:I").Select
    Selection.EntireColumn.Hidden = False

    
End Sub


Sub printIssueSheets()
'///Assigned to the print button on the PrintButton worksheet of each line's workbook//////////////////////////////////////
'///Delete all unused sheets from the workbook/////////////////////////////////////////////////////////////////////////////

'Turn off the warnings so that sheets can be deleted without interruption
Application.DisplayAlerts = False

'Start at the beginning
Worksheets(1).Activate

'Loop through all sheets and delete the ones that start with "Blending Issue Sheet"
Dim i As Integer
For i = 1 To (ActiveWorkbook.Worksheets.Count - 1)
ActiveSheet.PrintOut
Sheets(i + 1).Select
Next i

'Turn sheet delete warnings back on
Application.DisplayAlerts = True

End Sub


